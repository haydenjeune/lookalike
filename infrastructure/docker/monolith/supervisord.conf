[unix_http_server]
file=/tmp/supervisor.sock   ; the path to the socket file

[supervisord]
logfile=/tmp/supervisord.log ; main log file; default $CWD/supervisord.log
logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
logfile_backups=10           ; # of main logfile backups; 0 means none, default 10
loglevel=info                ; log level; default info; others: debug,warn,trace
pidfile=/tmp/supervisord.pid ; supervisord pidfile; default supervisord.pid
nodaemon=true                ; start in foreground if true; default false
silent=false                 ; no logs to stdout if true; default false
minfds=1024                  ; min. avail startup file descriptors; default 1024
minprocs=200                 ; min. avail process descriptors;default 200
;user=supervisord            ; setuid to this UNIX account at startup; recommended if root

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket

[program:api]
command=/bin/sh -c ./api.pex    ; the program (relative uses PATH, can take args)
numprocs=1                      ; number of processes copies to start (def 1)
directory=/api                  ; directory to cwd to before exec (def no cwd)
startsecs=1                     ; # of secs prog must stay up to be running (def. 1)
redirect_stderr=true            ; redirect proc stderr to stdout (default false)
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0

[program:index]
command=/bin/sh -c ./index.pex  ; the program (relative uses PATH, can take args)
numprocs=1                      ; number of processes copies to start (def 1)
directory=/index                ; directory to cwd to before exec (def no cwd)
startsecs=1                     ; # of secs prog must stay up to be running (def. 1)
redirect_stderr=true            ; redirect proc stderr to stdout (default false)
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
